package Entry::Test;

use strict; use warnings; 

use locale; use POSIX qw( locale_h );
setlocale( LC_CTYPE, "ru_UA.UTF-8" );

use Apache2::Const qw/OK NOT_FOUND/;

our ( $r, $a, $q ); 

sub handler(){
    $r = shift; 
    $q = $r->uri(); 

	use Tools; 
    $a = &Tools::get_request_params($r);

    my $ALIAS = " \\_ \\w \\d \\- \\+ \\( \\) \\: \\, \\. ";

    my %c = ( 
        "\\/test\\/"           => *test_index{CODE},
        "\\/test\\/json\\.htm" => *test_json{CODE},
        "\\/test\\/jqx\\.htm"  => *test_jqx{CODE},
        "\\/test\\/log\\.htm"  => *test_log{CODE},

  	);
    
    foreach my $e ( keys %c ){ 
      if ( my @a = ( $q =~ /^$e$/ ) ) { 
        return &{ $c { $e } } ( @a ); 
        return $r if $r;
      } 
    } 

    return NOT_FOUND;
}

sub test_json(){

  $r->content_type('text/json');  

  use Core::DB;

  $db->do("
		   SELECT salemods.id   		id,
				  salemods.name  		name,
				  salemods.price 		price, 
				  brands.name			bname,
				  category.name 		cname,
				  category_parent.name 	cname_parent,
        		  concat( salemods.GalleryName, '/image_', salemods.idImage ) pic
			 FROM category category 
	   INNER JOIN category category_parent 
	  		   ON category.idParent = category_parent.id 
	   INNER JOIN salemods salemods 
	  		   ON salemods.idCategory = category.id
	   INNER JOIN brands brands 
	  		   ON brands.id = salemods.idBrand
            WHERE salemods.price > 0 
        	  AND salemods.isPublic = 1 
        	  AND salemods.idImage != 0 
    	 ORDER BY category_parent.name, category.name"); 		

  use Core::JSON;

  $r->print( $db->get_json() );

  return OK;
}

sub test_jqx(){
  $r->content_type('text/html');  
  use Core::Templates::Test;

  get_template( 'frontoffice/templates/test/jqx' => $r );

  return OK;
}


sub test_log(){
  $r->content_type('text/html');

  use Apache::ParseLog; 

  my $base = new Apache::ParseLog("/var/log/apache2/other_vhosts_access.log");

  my $localserver = $base->servername();
  
  my $log = $base->getCustomLog("combined");
  
  my %referer = $log->referer();
  
  my @sortedkeys = sortHashByValue(%referer);
  
  foreach (@sortedkeys) { 
	$r->print($_.': '.$referer{$_}.'<br>'); 
  }

  return OK;
}


sub test_index(){
  $r->content_type('text/html');  
  $r->print( '
    <html>
    <head>
        <title>My name is Test</title>
    </head>
    <body>
        <h1>Hello</h1>
        <h2>My name is Test Entry</h2>
        <h3>I have generated by myself!!!</h3>
        <p>Good stafffff Bro.!</p>
    </body>
    </html>
  ');
  return OK;
}

1;
